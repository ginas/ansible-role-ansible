---

- name: Install required packages
  apt: pkg={{ item }} state=latest install_recommends=no
  with_items: [ 'git', 'python-paramiko', 'python-yaml', 'python-jinja2', 'python-httplib2',
                'cdbs', 'debhelper', 'dpkg-dev', 'python-support', 'fakeroot', 'sshpass',
                'python-nose', 'python-passlib', 'python-setuptools', 'asciidoc', 'xmlto',
                'devscripts', 'build-essential' ]

- name: Get user home directory
  shell: echo $HOME
  register: role_ansible_user_home
  changed_when: False
  sudo_user: '{{ role_ansible_build_user }}'

- name: Clone Ansible repository
  git: repo={{ role_ansible_git_repository }} dest={{ role_ansible_user_home.stdout }}/{{ role_ansible_build_path }}
       version={{ role_ansible_git_branch }} update=yes
  register: role_ansible_git
  sudo_user: '{{ role_ansible_build_user }}'

- name: Get current Ansible version
  slurp: src={{ role_ansible_user_home.stdout }}/{{ role_ansible_build_path }}/VERSION
  register: role_ansible_build_version

- name: Set Ansible package version
  set_fact:
    role_ansible_package_version: '{{ role_ansible_build_version.content | b64decode | trim }}'

- name: Run Ansible tests if enabled
  command: make tests chdir={{ role_ansible_user_home.stdout }}/{{ role_ansible_build_path }}
  register: role_ansible_tests_results
  when: (role_ansible_git is defined and role_ansible_git.changed == True) and
        (role_ansible_tests is defined and role_ansible_tests)
  ignore_errors: True
  sudo_user: '{{ role_ansible_build_user }}'

- name: Send mail message in case of test errors
  mail: from='{{ role_ansible_build_user }}@{{ ansible_fqdn }}' subject='{{ role_ansible_tests_mail_subject }}'
        to='{{ role_ansible_tests_mail_to | join(",") }}' charset=utf8 body='{{ role_ansible_tests_mail_body }}'
        {% if role_ansible_tests_mail_replyto is defined and role_ansible_tests_mail_replyto %}
        headers=Reply-To='{{ role_ansible_tests_mail_replyto | join(",") }}'
        {% endif %}
  when: (role_ansible_tests_mail_to is defined and role_ansible_tests_mail_to) and
        (role_ansible_tests_results is defined and role_ansible_tests_results.rc != 0)
  sudo_user: '{{ role_ansible_build_user }}'

- name: Build Ansible .deb package
  command: make deb chdir={{ role_ansible_user_home.stdout }}/{{ role_ansible_build_path }}
  register: role_ansible_build
  when: role_ansible_git is defined and role_ansible_git.changed == True
  sudo_user: '{{ role_ansible_build_user }}'

- name: Install Ansible .deb package (stable version)
  shell: dpkg -i {{ role_ansible_user_home.stdout }}/{{ role_ansible_build_path }}/../ansible_{{ role_ansible_package_version }}_all.deb
  when: (role_ansible_build is defined and role_ansible_build.changed == True) and
        role_ansible_git_branch != 'devel'

- name: Install Ansible .deb package (devel version)
  shell: dpkg -i {{ role_ansible_user_home.stdout }}/{{ role_ansible_build_path }}/deb-build/unstable/ansible_{{ role_ansible_package_version }}-*_all.deb
  when: (role_ansible_build is defined and role_ansible_build.changed == True) and
        role_ansible_git_branch == 'devel'


